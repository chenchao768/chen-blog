(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{213:function(t,s,a){"use strict";a.r(s);var v=a(0),l=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue基础知识"}},[t._v("#")]),t._v(" vue基础知识")]),t._v(" "),a("h3",{attrs:{id:"学习vue的基本原理知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习vue的基本原理知识"}},[t._v("#")]),t._v(" 学习vue的基本原理知识")]),t._v(" "),a("hr"),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#学习vue的基本原理知识"}},[t._v("学习vue的基本原理知识")])]),a("li",[a("a",{attrs:{href:"#关于虚拟dom的原理浅析"}},[t._v("关于虚拟dom的原理浅析")])])])]),a("p"),t._v(" "),a("h3",{attrs:{id:"关于虚拟dom的原理浅析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于虚拟dom的原理浅析"}},[t._v("#")]),t._v(" 关于虚拟dom的原理浅析")]),t._v(" "),a("ul",[a("li",[t._v("虚拟dom的优劣势"),a("br")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("优势")]),t._v(" "),a("ul",[a("li",[t._v("保持性能下限：虚拟dom可以经过diff找出最小差异，然后批量进行patch,这种操作虽然比不上手动优化，但比起粗暴的dom操作性能要好很多")]),t._v(" "),a("li",[t._v("无需手动操作dom:虚拟dom的diff操作和patch都是在一次更新中自动进行的，无需手动操作dom")]),t._v(" "),a("li",[t._v("跨平台：虚拟dom本质上是javascript对象，而dom与平台强相关，相比之下虚拟DOM可以进行更方便地跨平台操作,例如服务器渲染、移动端开发等等")])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("劣势")]),t._v(" "),a("ul",[a("li",[t._v("无法进行极致优化: 在一些性能要求极高的应用中虚拟DOM无法进行针对性的极致优化,比如VScode采用直接手动操作DOM的方式进行极端的性能优化")])])]),t._v(" "),a("ul",[a("li",[t._v("虚拟dom的实现原理")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("原理")]),t._v(" "),a("ul",[a("li",[t._v("虚拟DOM本质上是JavaScript对象,是对真实DOM的抽象")]),t._v(" "),a("li",[t._v("状态变更时，记录新树和旧树的差异")]),t._v(" "),a("li",[t._v("最后把差异更新到真正的dom中")])])])])}),[],!1,null,null,null);s.default=l.exports}}]);